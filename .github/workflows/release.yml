# Solution inspired by this article: https://patriksvensson.se/posts/2020/03/creating-release-artifacts-with-github-actions

name: Build_and_release

on:
  push:
    tags:
      - v*

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    steps:
      - name: Set timezone
        uses: szenius/set-timezone@v1.2
        with:
          timezoneLinux: "Europe/Warsaw"
          timezoneWindows: "Europe/Warsaw"
          timezoneMacos: "Europe/Warsaw"
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore
      - name: Test
        run: dotnet test --no-build --verbosity normal

  release:
    needs: build_and_test
    name: Release
    strategy:
      matrix:
        target: [linux-x64, win-x64, osx-x64, osx-arm64]

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 7.0.400
      - name: Build
        shell: bash
        run: |
          # Variables
          tag=$(git describe --tags --abbrev=0)
          release_name="Chirp-$tag-${{ matrix.target }}"

          # Build
          dotnet publish src/Chirp.Web/Chirp.Web.csproj -r ${{ matrix.target }} -c Release -o "$release_name"

          # Zip files
          zip -r "${release_name}.zip" "$release_name"


          # Delete output directory
          rm -r "$release_name"
      - name: Publish
        uses: softprops/action-gh-release@v1
        with:
          files: "Chirp*"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
